[{"name":"FIELD","description":"io.github.stefankoppier.openapi.validator.core.rules.RuleGroup.Category.FIELD","location":"core/io.github.stefankoppier.openapi.validator.core.rules/-rule-group/-category/-f-i-e-l-d/index.html","searchKeys":["FIELD","FIELD","io.github.stefankoppier.openapi.validator.core.rules.RuleGroup.Category.FIELD"]},{"name":"MESSAGE","description":"io.github.stefankoppier.openapi.validator.core.rules.RuleGroup.Category.MESSAGE","location":"core/io.github.stefankoppier.openapi.validator.core.rules/-rule-group/-category/-m-e-s-s-a-g-e/index.html","searchKeys":["MESSAGE","MESSAGE","io.github.stefankoppier.openapi.validator.core.rules.RuleGroup.Category.MESSAGE"]},{"name":"OBJECT","description":"io.github.stefankoppier.openapi.validator.core.rules.RuleGroup.Category.OBJECT","location":"core/io.github.stefankoppier.openapi.validator.core.rules/-rule-group/-category/-o-b-j-e-c-t/index.html","searchKeys":["OBJECT","OBJECT","io.github.stefankoppier.openapi.validator.core.rules.RuleGroup.Category.OBJECT"]},{"name":"UNKNOWN","description":"io.github.stefankoppier.openapi.validator.core.rules.RuleGroup.Category.UNKNOWN","location":"core/io.github.stefankoppier.openapi.validator.core.rules/-rule-group/-category/-u-n-k-n-o-w-n/index.html","searchKeys":["UNKNOWN","UNKNOWN","io.github.stefankoppier.openapi.validator.core.rules.RuleGroup.Category.UNKNOWN"]},{"name":"abstract class IterableValidationRule<T : Any> : ValidationRule<Iterable<T>> ","description":"io.github.stefankoppier.openapi.validator.core.rules.primitives.IterableValidationRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.primitives/-iterable-validation-rule/index.html","searchKeys":["IterableValidationRule","abstract class IterableValidationRule<T : Any> : ValidationRule<Iterable<T>> ","io.github.stefankoppier.openapi.validator.core.rules.primitives.IterableValidationRule"]},{"name":"abstract class ValidationRule<T : Any>","description":"io.github.stefankoppier.openapi.validator.core.rules.ValidationRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules/-validation-rule/index.html","searchKeys":["ValidationRule","abstract class ValidationRule<T : Any>","io.github.stefankoppier.openapi.validator.core.rules.ValidationRule"]},{"name":"class AnyRule : ValidationRule<Any> ","description":"io.github.stefankoppier.openapi.validator.core.rules.primitives.AnyRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.primitives/-any-rule/index.html","searchKeys":["AnyRule","class AnyRule : ValidationRule<Any> ","io.github.stefankoppier.openapi.validator.core.rules.primitives.AnyRule"]},{"name":"class BigDecimalRule : ValidationRule<BigDecimal> ","description":"io.github.stefankoppier.openapi.validator.core.rules.primitives.BigDecimalRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.primitives/-big-decimal-rule/index.html","searchKeys":["BigDecimalRule","class BigDecimalRule : ValidationRule<BigDecimal> ","io.github.stefankoppier.openapi.validator.core.rules.primitives.BigDecimalRule"]},{"name":"class BooleanRule : ValidationRule<Boolean> ","description":"io.github.stefankoppier.openapi.validator.core.rules.primitives.BooleanRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.primitives/-boolean-rule/index.html","searchKeys":["BooleanRule","class BooleanRule : ValidationRule<Boolean> ","io.github.stefankoppier.openapi.validator.core.rules.primitives.BooleanRule"]},{"name":"class ComponentsRule : ValidationRule<Components> ","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ComponentsRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-components-rule/index.html","searchKeys":["ComponentsRule","class ComponentsRule : ValidationRule<Components> ","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ComponentsRule"]},{"name":"class ContactRule : ValidationRule<Contact> ","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ContactRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-contact-rule/index.html","searchKeys":["ContactRule","class ContactRule : ValidationRule<Contact> ","io.github.stefankoppier.openapi.validator.core.rules.openapi.ContactRule"]},{"name":"class ContentRule : IterableValidationRule<Pair<String, MediaType>> ","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ContentRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-content-rule/index.html","searchKeys":["ContentRule","class ContentRule : IterableValidationRule<Pair<String, MediaType>> ","io.github.stefankoppier.openapi.validator.core.rules.openapi.ContentRule"]},{"name":"class ContentRule : IterableValidationRule<Pair<String, MediaType>> ","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ContentRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-content-rule/index.html","searchKeys":["ContentRule","class ContentRule : IterableValidationRule<Pair<String, MediaType>> ","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ContentRule"]},{"name":"class EncodingRule(group: RuleGroup) : ValidationRule<Encoding> ","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.EncodingRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-encoding-rule/index.html","searchKeys":["EncodingRule","class EncodingRule(group: RuleGroup) : ValidationRule<Encoding> ","io.github.stefankoppier.openapi.validator.core.rules.openapi.EncodingRule"]},{"name":"class EncodingsRule : IterableValidationRule<Pair<String, Encoding>> ","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.EncodingsRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-encodings-rule/index.html","searchKeys":["EncodingsRule","class EncodingsRule : IterableValidationRule<Pair<String, Encoding>> ","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.EncodingsRule"]},{"name":"class EnumRule<T : Enum<*>> : ValidationRule<T> ","description":"io.github.stefankoppier.openapi.validator.core.rules.primitives.EnumRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.primitives/-enum-rule/index.html","searchKeys":["EnumRule","class EnumRule<T : Enum<*>> : ValidationRule<T> ","io.github.stefankoppier.openapi.validator.core.rules.primitives.EnumRule"]},{"name":"class ExampleRule : ValidationRule<Example> ","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ExampleRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-example-rule/index.html","searchKeys":["ExampleRule","class ExampleRule : ValidationRule<Example> ","io.github.stefankoppier.openapi.validator.core.rules.openapi.ExampleRule"]},{"name":"class ExamplesRule : IterableValidationRule<Pair<String, Example>> ","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ExamplesRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-examples-rule/index.html","searchKeys":["ExamplesRule","class ExamplesRule : IterableValidationRule<Pair<String, Example>> ","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ExamplesRule"]},{"name":"class ExternalDocumentationRule : ValidationRule<ExternalDocumentation> ","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ExternalDocumentationRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-external-documentation-rule/index.html","searchKeys":["ExternalDocumentationRule","class ExternalDocumentationRule : ValidationRule<ExternalDocumentation> ","io.github.stefankoppier.openapi.validator.core.rules.openapi.ExternalDocumentationRule"]},{"name":"class HeaderRule(group: RuleGroup) : ValidationRule<Header> ","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.HeaderRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-header-rule/index.html","searchKeys":["HeaderRule","class HeaderRule(group: RuleGroup) : ValidationRule<Header> ","io.github.stefankoppier.openapi.validator.core.rules.openapi.HeaderRule"]},{"name":"class HeadersRule : IterableValidationRule<Pair<String, Header>> ","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.HeadersRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-headers-rule/index.html","searchKeys":["HeadersRule","class HeadersRule : IterableValidationRule<Pair<String, Header>> ","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.HeadersRule"]},{"name":"class InfoRule : ValidationRule<Info> ","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.InfoRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-info-rule/index.html","searchKeys":["InfoRule","class InfoRule : ValidationRule<Info> ","io.github.stefankoppier.openapi.validator.core.rules.openapi.InfoRule"]},{"name":"class IntegerRule : ValidationRule<Int> ","description":"io.github.stefankoppier.openapi.validator.core.rules.primitives.IntegerRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.primitives/-integer-rule/index.html","searchKeys":["IntegerRule","class IntegerRule : ValidationRule<Int> ","io.github.stefankoppier.openapi.validator.core.rules.primitives.IntegerRule"]},{"name":"class IterableStringRule : IterableValidationRule<String> ","description":"io.github.stefankoppier.openapi.validator.core.rules.primitives.IterableStringRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.primitives/-iterable-string-rule/index.html","searchKeys":["IterableStringRule","class IterableStringRule : IterableValidationRule<String> ","io.github.stefankoppier.openapi.validator.core.rules.primitives.IterableStringRule"]},{"name":"class LicenceRule : ValidationRule<License> ","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.LicenceRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-licence-rule/index.html","searchKeys":["LicenceRule","class LicenceRule : ValidationRule<License> ","io.github.stefankoppier.openapi.validator.core.rules.openapi.LicenceRule"]},{"name":"class MediaTypeRule : ValidationRule<MediaType> ","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.MediaTypeRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-media-type-rule/index.html","searchKeys":["MediaTypeRule","class MediaTypeRule : ValidationRule<MediaType> ","io.github.stefankoppier.openapi.validator.core.rules.openapi.MediaTypeRule"]},{"name":"class OpenAPIRule : ValidationRule<OpenAPI> ","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.OpenAPIRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-open-a-p-i-rule/index.html","searchKeys":["OpenAPIRule","class OpenAPIRule : ValidationRule<OpenAPI> ","io.github.stefankoppier.openapi.validator.core.rules.openapi.OpenAPIRule"]},{"name":"class OperationRule : ValidationRule<Operation> ","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.OperationRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-operation-rule/index.html","searchKeys":["OperationRule","class OperationRule : ValidationRule<Operation> ","io.github.stefankoppier.openapi.validator.core.rules.openapi.OperationRule"]},{"name":"class ParameterRule : ValidationRule<Parameter> ","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ParameterRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-parameter-rule/index.html","searchKeys":["ParameterRule","class ParameterRule : ValidationRule<Parameter> ","io.github.stefankoppier.openapi.validator.core.rules.openapi.ParameterRule"]},{"name":"class ParametersRule : IterableValidationRule<Parameter> ","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ParametersRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-parameters-rule/index.html","searchKeys":["ParametersRule","class ParametersRule : IterableValidationRule<Parameter> ","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ParametersRule"]},{"name":"class Parser","description":"io.github.stefankoppier.openapi.validator.core.Parser","location":"core/io.github.stefankoppier.openapi.validator.core/-parser/index.html","searchKeys":["Parser","class Parser","io.github.stefankoppier.openapi.validator.core.Parser"]},{"name":"class PathRule : ValidationRule<PathItem> ","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.PathRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-path-rule/index.html","searchKeys":["PathRule","class PathRule : ValidationRule<PathItem> ","io.github.stefankoppier.openapi.validator.core.rules.openapi.PathRule"]},{"name":"class PathsRule : IterableValidationRule<Pair<String, PathItem>> ","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.PathsRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-paths-rule/index.html","searchKeys":["PathsRule","class PathsRule : IterableValidationRule<Pair<String, PathItem>> ","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.PathsRule"]},{"name":"class RequestBodyRule : ValidationRule<RequestBody> ","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.RequestBodyRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-request-body-rule/index.html","searchKeys":["RequestBodyRule","class RequestBodyRule : ValidationRule<RequestBody> ","io.github.stefankoppier.openapi.validator.core.rules.openapi.RequestBodyRule"]},{"name":"class ResponseRule : ValidationRule<ApiResponse> ","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ResponseRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-response-rule/index.html","searchKeys":["ResponseRule","class ResponseRule : ValidationRule<ApiResponse> ","io.github.stefankoppier.openapi.validator.core.rules.openapi.ResponseRule"]},{"name":"class ResponsesRule : IterableValidationRule<Pair<String, ApiResponse>> ","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ResponsesRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-responses-rule/index.html","searchKeys":["ResponsesRule","class ResponsesRule : IterableValidationRule<Pair<String, ApiResponse>> ","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ResponsesRule"]},{"name":"class SchemaRule : ValidationRule<Schema<*>> ","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-schema-rule/index.html","searchKeys":["SchemaRule","class SchemaRule : ValidationRule<Schema<*>> ","io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule"]},{"name":"class SchemasRule : IterableValidationRule<Pair<String, Schema<*>>> ","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.SchemasRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-schemas-rule/index.html","searchKeys":["SchemasRule","class SchemasRule : IterableValidationRule<Pair<String, Schema<*>>> ","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.SchemasRule"]},{"name":"class SecurityRequirementRule(group: RuleGroup) : IterableValidationRule<Pair<String, List<String>>> ","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.SecurityRequirementRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-security-requirement-rule/index.html","searchKeys":["SecurityRequirementRule","class SecurityRequirementRule(group: RuleGroup) : IterableValidationRule<Pair<String, List<String>>> ","io.github.stefankoppier.openapi.validator.core.rules.openapi.SecurityRequirementRule"]},{"name":"class SecurityRequirementsRule : IterableValidationRule<SecurityRequirement> ","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.SecurityRequirementsRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-security-requirements-rule/index.html","searchKeys":["SecurityRequirementsRule","class SecurityRequirementsRule : IterableValidationRule<SecurityRequirement> ","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.SecurityRequirementsRule"]},{"name":"class ServerRule : ValidationRule<Server> ","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ServerRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-server-rule/index.html","searchKeys":["ServerRule","class ServerRule : ValidationRule<Server> ","io.github.stefankoppier.openapi.validator.core.rules.openapi.ServerRule"]},{"name":"class ServerVariableRule : ValidationRule<ServerVariable> ","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ServerVariableRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-server-variable-rule/index.html","searchKeys":["ServerVariableRule","class ServerVariableRule : ValidationRule<ServerVariable> ","io.github.stefankoppier.openapi.validator.core.rules.openapi.ServerVariableRule"]},{"name":"class ServerVariablesRule : IterableValidationRule<Pair<String, ServerVariable>> ","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ServerVariablesRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-server-variables-rule/index.html","searchKeys":["ServerVariablesRule","class ServerVariablesRule : IterableValidationRule<Pair<String, ServerVariable>> ","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ServerVariablesRule"]},{"name":"class ServersRule : IterableValidationRule<Server> ","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ServersRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-servers-rule/index.html","searchKeys":["ServersRule","class ServersRule : IterableValidationRule<Server> ","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ServersRule"]},{"name":"class StringRule : ValidationRule<String> ","description":"io.github.stefankoppier.openapi.validator.core.rules.primitives.StringRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.primitives/-string-rule/index.html","searchKeys":["StringRule","class StringRule : ValidationRule<String> ","io.github.stefankoppier.openapi.validator.core.rules.primitives.StringRule"]},{"name":"class TagRule : ValidationRule<Tag> ","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.TagRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-tag-rule/index.html","searchKeys":["TagRule","class TagRule : ValidationRule<Tag> ","io.github.stefankoppier.openapi.validator.core.rules.openapi.TagRule"]},{"name":"class TagsRule : IterableValidationRule<Tag> ","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.TagsRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-tags-rule/index.html","searchKeys":["TagsRule","class TagsRule : IterableValidationRule<Tag> ","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.TagsRule"]},{"name":"class URIRule : ValidationRule<URI> ","description":"io.github.stefankoppier.openapi.validator.core.rules.primitives.URIRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.primitives/-u-r-i-rule/index.html","searchKeys":["URIRule","class URIRule : ValidationRule<URI> ","io.github.stefankoppier.openapi.validator.core.rules.primitives.URIRule"]},{"name":"class URLRule : ValidationRule<URL> ","description":"io.github.stefankoppier.openapi.validator.core.rules.primitives.URLRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.primitives/-u-r-l-rule/index.html","searchKeys":["URLRule","class URLRule : ValidationRule<URL> ","io.github.stefankoppier.openapi.validator.core.rules.primitives.URLRule"]},{"name":"class ValidationResult","description":"io.github.stefankoppier.openapi.validator.core.ValidationResult","location":"core/io.github.stefankoppier.openapi.validator.core/-validation-result/index.html","searchKeys":["ValidationResult","class ValidationResult","io.github.stefankoppier.openapi.validator.core.ValidationResult"]},{"name":"class Validator(rule: ValidationRule<OpenAPI>)","description":"io.github.stefankoppier.openapi.validator.core.Validator","location":"core/io.github.stefankoppier.openapi.validator.core/-validator/index.html","searchKeys":["Validator","class Validator(rule: ValidationRule<OpenAPI>)","io.github.stefankoppier.openapi.validator.core.Validator"]},{"name":"constructor()","description":"io.github.stefankoppier.openapi.validator.core.Parser.Parser","location":"core/io.github.stefankoppier.openapi.validator.core/-parser/-parser.html","searchKeys":["Parser","constructor()","io.github.stefankoppier.openapi.validator.core.Parser.Parser"]},{"name":"constructor(content: String, category: RuleGroup.Category)","description":"io.github.stefankoppier.openapi.validator.core.ValidationNode.ValidationNode","location":"core/io.github.stefankoppier.openapi.validator.core/-validation-node/-validation-node.html","searchKeys":["ValidationNode","constructor(content: String, category: RuleGroup.Category)","io.github.stefankoppier.openapi.validator.core.ValidationNode.ValidationNode"]},{"name":"constructor(group: RuleGroup)","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.EncodingRule.EncodingRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-encoding-rule/-encoding-rule.html","searchKeys":["EncodingRule","constructor(group: RuleGroup)","io.github.stefankoppier.openapi.validator.core.rules.openapi.EncodingRule.EncodingRule"]},{"name":"constructor(group: RuleGroup)","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.HeaderRule.HeaderRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-header-rule/-header-rule.html","searchKeys":["HeaderRule","constructor(group: RuleGroup)","io.github.stefankoppier.openapi.validator.core.rules.openapi.HeaderRule.HeaderRule"]},{"name":"constructor(group: RuleGroup)","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.SecurityRequirementRule.SecurityRequirementRule","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-security-requirement-rule/-security-requirement-rule.html","searchKeys":["SecurityRequirementRule","constructor(group: RuleGroup)","io.github.stefankoppier.openapi.validator.core.rules.openapi.SecurityRequirementRule.SecurityRequirementRule"]},{"name":"constructor(group: RuleGroup, message: String)","description":"io.github.stefankoppier.openapi.validator.core.ValidationFailure.ValidationFailure","location":"core/io.github.stefankoppier.openapi.validator.core/-validation-failure/-validation-failure.html","searchKeys":["ValidationFailure","constructor(group: RuleGroup, message: String)","io.github.stefankoppier.openapi.validator.core.ValidationFailure.ValidationFailure"]},{"name":"constructor(rule: ValidationRule<OpenAPI>)","description":"io.github.stefankoppier.openapi.validator.core.Validator.Validator","location":"core/io.github.stefankoppier.openapi.validator.core/-validator/-validator.html","searchKeys":["Validator","constructor(rule: ValidationRule<OpenAPI>)","io.github.stefankoppier.openapi.validator.core.Validator.Validator"]},{"name":"data class RuleGroup","description":"io.github.stefankoppier.openapi.validator.core.rules.RuleGroup","location":"core/io.github.stefankoppier.openapi.validator.core.rules/-rule-group/index.html","searchKeys":["RuleGroup","data class RuleGroup","io.github.stefankoppier.openapi.validator.core.rules.RuleGroup"]},{"name":"data class ValidationFailure(val group: RuleGroup, val message: String)","description":"io.github.stefankoppier.openapi.validator.core.ValidationFailure","location":"core/io.github.stefankoppier.openapi.validator.core/-validation-failure/index.html","searchKeys":["ValidationFailure","data class ValidationFailure(val group: RuleGroup, val message: String)","io.github.stefankoppier.openapi.validator.core.ValidationFailure"]},{"name":"data class ValidationNode(val content: String, val category: RuleGroup.Category)","description":"io.github.stefankoppier.openapi.validator.core.ValidationNode","location":"core/io.github.stefankoppier.openapi.validator.core/-validation-node/index.html","searchKeys":["ValidationNode","data class ValidationNode(val content: String, val category: RuleGroup.Category)","io.github.stefankoppier.openapi.validator.core.ValidationNode"]},{"name":"enum Category : Enum<RuleGroup.Category> ","description":"io.github.stefankoppier.openapi.validator.core.rules.RuleGroup.Category","location":"core/io.github.stefankoppier.openapi.validator.core.rules/-rule-group/-category/index.html","searchKeys":["Category","enum Category : Enum<RuleGroup.Category> ","io.github.stefankoppier.openapi.validator.core.rules.RuleGroup.Category"]},{"name":"fun <R : IterableValidationRule<T>> R.each(description: String = \"\", predicate: (T) -> Boolean): R","description":"io.github.stefankoppier.openapi.validator.core.rules.primitives.IterableValidationRule.each","location":"core/io.github.stefankoppier.openapi.validator.core.rules.primitives/-iterable-validation-rule/each.html","searchKeys":["each","fun <R : IterableValidationRule<T>> R.each(description: String = \"\", predicate: (T) -> Boolean): R","io.github.stefankoppier.openapi.validator.core.rules.primitives.IterableValidationRule.each"]},{"name":"fun <R : IterableValidationRule<T>> R.none(description: String = \"\", predicate: (T) -> Boolean): R","description":"io.github.stefankoppier.openapi.validator.core.rules.primitives.IterableValidationRule.none","location":"core/io.github.stefankoppier.openapi.validator.core.rules.primitives/-iterable-validation-rule/none.html","searchKeys":["none","fun <R : IterableValidationRule<T>> R.none(description: String = \"\", predicate: (T) -> Boolean): R","io.github.stefankoppier.openapi.validator.core.rules.primitives.IterableValidationRule.none"]},{"name":"fun <R : IterableValidationRule<T>> R.some(description: String = \"\", predicate: (T) -> Boolean): R","description":"io.github.stefankoppier.openapi.validator.core.rules.primitives.IterableValidationRule.some","location":"core/io.github.stefankoppier.openapi.validator.core.rules.primitives/-iterable-validation-rule/some.html","searchKeys":["some","fun <R : IterableValidationRule<T>> R.some(description: String = \"\", predicate: (T) -> Boolean): R","io.github.stefankoppier.openapi.validator.core.rules.primitives.IterableValidationRule.some"]},{"name":"fun <R : ValidationRule<T>> R.exactly(value: T): R","description":"io.github.stefankoppier.openapi.validator.core.rules.ValidationRule.exactly","location":"core/io.github.stefankoppier.openapi.validator.core.rules/-validation-rule/exactly.html","searchKeys":["exactly","fun <R : ValidationRule<T>> R.exactly(value: T): R","io.github.stefankoppier.openapi.validator.core.rules.ValidationRule.exactly"]},{"name":"fun <R : ValidationRule<T>> R.given(precondition: (T?) -> Boolean, rule: () -> R): R","description":"io.github.stefankoppier.openapi.validator.core.rules.ValidationRule.given","location":"core/io.github.stefankoppier.openapi.validator.core.rules/-validation-rule/given.html","searchKeys":["given","fun <R : ValidationRule<T>> R.given(precondition: (T?) -> Boolean, rule: () -> R): R","io.github.stefankoppier.openapi.validator.core.rules.ValidationRule.given"]},{"name":"fun <R : ValidationRule<T>> R.holds(message: (T?) -> String = { \"Was supposed to hold for '$it' but did not\" }, predicate: (T?) -> Boolean): R","description":"io.github.stefankoppier.openapi.validator.core.rules.ValidationRule.holds","location":"core/io.github.stefankoppier.openapi.validator.core.rules/-validation-rule/holds.html","searchKeys":["holds","fun <R : ValidationRule<T>> R.holds(message: (T?) -> String = { \"Was supposed to hold for '$it' but did not\" }, predicate: (T?) -> Boolean): R","io.github.stefankoppier.openapi.validator.core.rules.ValidationRule.holds"]},{"name":"fun <R : ValidationRule<T>> R.required(): R","description":"io.github.stefankoppier.openapi.validator.core.rules.ValidationRule.required","location":"core/io.github.stefankoppier.openapi.validator.core.rules/-validation-rule/required.html","searchKeys":["required","fun <R : ValidationRule<T>> R.required(): R","io.github.stefankoppier.openapi.validator.core.rules.ValidationRule.required"]},{"name":"fun <R : ValidationRule<T>> R.since(date: LocalDate, rule: () -> R): R","description":"io.github.stefankoppier.openapi.validator.core.rules.ValidationRule.since","location":"core/io.github.stefankoppier.openapi.validator.core.rules/-validation-rule/since.html","searchKeys":["since","fun <R : ValidationRule<T>> R.since(date: LocalDate, rule: () -> R): R","io.github.stefankoppier.openapi.validator.core.rules.ValidationRule.since"]},{"name":"fun <R : ValidationRule<URI>> R.exactly(value: String): R","description":"io.github.stefankoppier.openapi.validator.core.rules.primitives.URIRule.exactly","location":"core/io.github.stefankoppier.openapi.validator.core.rules.primitives/-u-r-i-rule/exactly.html","searchKeys":["exactly","fun <R : ValidationRule<URI>> R.exactly(value: String): R","io.github.stefankoppier.openapi.validator.core.rules.primitives.URIRule.exactly"]},{"name":"fun <R : ValidationRule<URL>> R.exactly(value: String): R","description":"io.github.stefankoppier.openapi.validator.core.rules.primitives.URLRule.exactly","location":"core/io.github.stefankoppier.openapi.validator.core.rules.primitives/-u-r-l-rule/exactly.html","searchKeys":["exactly","fun <R : ValidationRule<URL>> R.exactly(value: String): R","io.github.stefankoppier.openapi.validator.core.rules.primitives.URLRule.exactly"]},{"name":"fun <T : Any> instanceof(clazz: KClass<T>): AnyRule","description":"io.github.stefankoppier.openapi.validator.core.rules.primitives.AnyRule.instanceof","location":"core/io.github.stefankoppier.openapi.validator.core.rules.primitives/-any-rule/instanceof.html","searchKeys":["instanceof","fun <T : Any> instanceof(clazz: KClass<T>): AnyRule","io.github.stefankoppier.openapi.validator.core.rules.primitives.AnyRule.instanceof"]},{"name":"fun <V, R : ValidationRule<T>> R.optional(value: (T?) -> V?, rule: () -> R): R","description":"io.github.stefankoppier.openapi.validator.core.rules.ValidationRule.optional","location":"core/io.github.stefankoppier.openapi.validator.core.rules/-validation-rule/optional.html","searchKeys":["optional","fun <V, R : ValidationRule<T>> R.optional(value: (T?) -> V?, rule: () -> R): R","io.github.stefankoppier.openapi.validator.core.rules.ValidationRule.optional"]},{"name":"fun all(description: String = \"\", rule: EncodingRule.() -> EncodingRule): EncodingsRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.EncodingsRule.all","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-encodings-rule/all.html","searchKeys":["all","fun all(description: String = \"\", rule: EncodingRule.() -> EncodingRule): EncodingsRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.EncodingsRule.all"]},{"name":"fun all(description: String = \"\", rule: ExampleRule.() -> ExampleRule): ExamplesRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ExamplesRule.all","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-examples-rule/all.html","searchKeys":["all","fun all(description: String = \"\", rule: ExampleRule.() -> ExampleRule): ExamplesRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ExamplesRule.all"]},{"name":"fun all(description: String = \"\", rule: HeaderRule.() -> HeaderRule): HeadersRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.HeadersRule.all","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-headers-rule/all.html","searchKeys":["all","fun all(description: String = \"\", rule: HeaderRule.() -> HeaderRule): HeadersRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.HeadersRule.all"]},{"name":"fun all(description: String = \"\", rule: MediaTypeRule.() -> MediaTypeRule): ContentRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ContentRule.all","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-content-rule/all.html","searchKeys":["all","fun all(description: String = \"\", rule: MediaTypeRule.() -> MediaTypeRule): ContentRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ContentRule.all"]},{"name":"fun all(description: String = \"\", rule: ParameterRule.() -> ParameterRule): ParametersRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ParametersRule.all","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-parameters-rule/all.html","searchKeys":["all","fun all(description: String = \"\", rule: ParameterRule.() -> ParameterRule): ParametersRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ParametersRule.all"]},{"name":"fun all(description: String = \"\", rule: PathRule.() -> PathRule): PathsRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.PathsRule.all","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-paths-rule/all.html","searchKeys":["all","fun all(description: String = \"\", rule: PathRule.() -> PathRule): PathsRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.PathsRule.all"]},{"name":"fun all(description: String = \"\", rule: ResponseRule.() -> ResponseRule): ResponsesRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ResponsesRule.all","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-responses-rule/all.html","searchKeys":["all","fun all(description: String = \"\", rule: ResponseRule.() -> ResponseRule): ResponsesRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ResponsesRule.all"]},{"name":"fun all(description: String = \"\", rule: SchemaRule.() -> SchemaRule): SchemasRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.SchemasRule.all","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-schemas-rule/all.html","searchKeys":["all","fun all(description: String = \"\", rule: SchemaRule.() -> SchemaRule): SchemasRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.SchemasRule.all"]},{"name":"fun all(description: String = \"\", rule: ServerRule.() -> ServerRule): ServersRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ServersRule.all","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-servers-rule/all.html","searchKeys":["all","fun all(description: String = \"\", rule: ServerRule.() -> ServerRule): ServersRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ServersRule.all"]},{"name":"fun all(description: String = \"\", rule: ServerVariableRule.() -> ServerVariableRule): ServerVariablesRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ServerVariablesRule.all","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-server-variables-rule/all.html","searchKeys":["all","fun all(description: String = \"\", rule: ServerVariableRule.() -> ServerVariableRule): ServerVariablesRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ServerVariablesRule.all"]},{"name":"fun all(description: String = \"\", rule: TagRule.() -> TagRule): TagsRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.TagsRule.all","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-tags-rule/all.html","searchKeys":["all","fun all(description: String = \"\", rule: TagRule.() -> TagRule): TagsRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.TagsRule.all"]},{"name":"fun allowEmptyValue(description: String = \"\", rule: BooleanRule.() -> BooleanRule): ParameterRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ParameterRule.allowEmptyValue","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-parameter-rule/allow-empty-value.html","searchKeys":["allowEmptyValue","fun allowEmptyValue(description: String = \"\", rule: BooleanRule.() -> BooleanRule): ParameterRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.ParameterRule.allowEmptyValue"]},{"name":"fun allowReserved(description: String = \"\", rule: BooleanRule.() -> BooleanRule): EncodingRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.EncodingRule.allowReserved","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-encoding-rule/allow-reserved.html","searchKeys":["allowReserved","fun allowReserved(description: String = \"\", rule: BooleanRule.() -> BooleanRule): EncodingRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.EncodingRule.allowReserved"]},{"name":"fun allowReserved(description: String = \"\", rule: BooleanRule.() -> BooleanRule): ParameterRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ParameterRule.allowReserved","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-parameter-rule/allow-reserved.html","searchKeys":["allowReserved","fun allowReserved(description: String = \"\", rule: BooleanRule.() -> BooleanRule): ParameterRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.ParameterRule.allowReserved"]},{"name":"fun alpha(): StringRule","description":"io.github.stefankoppier.openapi.validator.core.rules.primitives.StringRule.alpha","location":"core/io.github.stefankoppier.openapi.validator.core.rules.primitives/-string-rule/alpha.html","searchKeys":["alpha","fun alpha(): StringRule","io.github.stefankoppier.openapi.validator.core.rules.primitives.StringRule.alpha"]},{"name":"fun alphanumeric(): StringRule","description":"io.github.stefankoppier.openapi.validator.core.rules.primitives.StringRule.alphanumeric","location":"core/io.github.stefankoppier.openapi.validator.core.rules.primitives/-string-rule/alphanumeric.html","searchKeys":["alphanumeric","fun alphanumeric(): StringRule","io.github.stefankoppier.openapi.validator.core.rules.primitives.StringRule.alphanumeric"]},{"name":"fun between(min: BigDecimal, max: BigDecimal): BigDecimalRule","description":"io.github.stefankoppier.openapi.validator.core.rules.primitives.BigDecimalRule.between","location":"core/io.github.stefankoppier.openapi.validator.core.rules.primitives/-big-decimal-rule/between.html","searchKeys":["between","fun between(min: BigDecimal, max: BigDecimal): BigDecimalRule","io.github.stefankoppier.openapi.validator.core.rules.primitives.BigDecimalRule.between"]},{"name":"fun between(min: Int, max: Int): IntegerRule","description":"io.github.stefankoppier.openapi.validator.core.rules.primitives.IntegerRule.between","location":"core/io.github.stefankoppier.openapi.validator.core.rules.primitives/-integer-rule/between.html","searchKeys":["between","fun between(min: Int, max: Int): IntegerRule","io.github.stefankoppier.openapi.validator.core.rules.primitives.IntegerRule.between"]},{"name":"fun components(description: String = \"\", rule: ComponentsRule.() -> ComponentsRule): OpenAPIRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.OpenAPIRule.components","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-open-a-p-i-rule/components.html","searchKeys":["components","fun components(description: String = \"\", rule: ComponentsRule.() -> ComponentsRule): OpenAPIRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.OpenAPIRule.components"]},{"name":"fun condition(failure: ValidationFailure, condition: () -> Boolean): ValidationResult","description":"io.github.stefankoppier.openapi.validator.core.ValidationResult.Companion.condition","location":"core/io.github.stefankoppier.openapi.validator.core/-validation-result/-companion/condition.html","searchKeys":["condition","fun condition(failure: ValidationFailure, condition: () -> Boolean): ValidationResult","io.github.stefankoppier.openapi.validator.core.ValidationResult.Companion.condition"]},{"name":"fun contact(description: String = \"\", rule: ContactRule.() -> ContactRule): InfoRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.InfoRule.contact","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-info-rule/contact.html","searchKeys":["contact","fun contact(description: String = \"\", rule: ContactRule.() -> ContactRule): InfoRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.InfoRule.contact"]},{"name":"fun content(description: String = \"\", rule: ContentRule.() -> ContentRule): HeaderRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.HeaderRule.content","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-header-rule/content.html","searchKeys":["content","fun content(description: String = \"\", rule: ContentRule.() -> ContentRule): HeaderRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.HeaderRule.content"]},{"name":"fun content(description: String = \"\", rule: ContentRule.() -> ContentRule): ParameterRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ParameterRule.content","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-parameter-rule/content.html","searchKeys":["content","fun content(description: String = \"\", rule: ContentRule.() -> ContentRule): ParameterRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.ParameterRule.content"]},{"name":"fun content(description: String = \"\", rule: ContentRule.() -> ContentRule): RequestBodyRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.RequestBodyRule.content","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-request-body-rule/content.html","searchKeys":["content","fun content(description: String = \"\", rule: ContentRule.() -> ContentRule): RequestBodyRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.RequestBodyRule.content"]},{"name":"fun content(description: String = \"\", rule: ContentRule.() -> ContentRule): ResponseRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ResponseRule.content","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-response-rule/content.html","searchKeys":["content","fun content(description: String = \"\", rule: ContentRule.() -> ContentRule): ResponseRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.ResponseRule.content"]},{"name":"fun contentType(description: String = \"\", rule: StringRule.() -> StringRule): EncodingRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.EncodingRule.contentType","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-encoding-rule/content-type.html","searchKeys":["contentType","fun contentType(description: String = \"\", rule: StringRule.() -> StringRule): EncodingRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.EncodingRule.contentType"]},{"name":"fun default(description: String = \"\", rule: StringRule.() -> StringRule): ServerVariableRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ServerVariableRule.default","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-server-variable-rule/default.html","searchKeys":["default","fun default(description: String = \"\", rule: StringRule.() -> StringRule): ServerVariableRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.ServerVariableRule.default"]},{"name":"fun delete(description: String = \"\", rule: OperationRule.() -> OperationRule): PathRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.PathRule.delete","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-path-rule/delete.html","searchKeys":["delete","fun delete(description: String = \"\", rule: OperationRule.() -> OperationRule): PathRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.PathRule.delete"]},{"name":"fun deprecated(description: String = \"\", rule: BooleanRule.() -> BooleanRule): HeaderRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.HeaderRule.deprecated","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-header-rule/deprecated.html","searchKeys":["deprecated","fun deprecated(description: String = \"\", rule: BooleanRule.() -> BooleanRule): HeaderRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.HeaderRule.deprecated"]},{"name":"fun deprecated(description: String = \"\", rule: BooleanRule.() -> BooleanRule): OperationRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.OperationRule.deprecated","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-operation-rule/deprecated.html","searchKeys":["deprecated","fun deprecated(description: String = \"\", rule: BooleanRule.() -> BooleanRule): OperationRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.OperationRule.deprecated"]},{"name":"fun deprecated(description: String = \"\", rule: BooleanRule.() -> BooleanRule): ParameterRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ParameterRule.deprecated","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-parameter-rule/deprecated.html","searchKeys":["deprecated","fun deprecated(description: String = \"\", rule: BooleanRule.() -> BooleanRule): ParameterRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.ParameterRule.deprecated"]},{"name":"fun deprecated(description: String = \"\", rule: BooleanRule.() -> BooleanRule): SchemaRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.deprecated","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-schema-rule/deprecated.html","searchKeys":["deprecated","fun deprecated(description: String = \"\", rule: BooleanRule.() -> BooleanRule): SchemaRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.deprecated"]},{"name":"fun description(description: String = \"\", rule: StringRule.() -> StringRule): ExampleRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ExampleRule.description","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-example-rule/description.html","searchKeys":["description","fun description(description: String = \"\", rule: StringRule.() -> StringRule): ExampleRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.ExampleRule.description"]},{"name":"fun description(description: String = \"\", rule: StringRule.() -> StringRule): ExternalDocumentationRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ExternalDocumentationRule.description","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-external-documentation-rule/description.html","searchKeys":["description","fun description(description: String = \"\", rule: StringRule.() -> StringRule): ExternalDocumentationRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.ExternalDocumentationRule.description"]},{"name":"fun description(description: String = \"\", rule: StringRule.() -> StringRule): HeaderRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.HeaderRule.description","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-header-rule/description.html","searchKeys":["description","fun description(description: String = \"\", rule: StringRule.() -> StringRule): HeaderRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.HeaderRule.description"]},{"name":"fun description(description: String = \"\", rule: StringRule.() -> StringRule): InfoRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.InfoRule.description","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-info-rule/description.html","searchKeys":["description","fun description(description: String = \"\", rule: StringRule.() -> StringRule): InfoRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.InfoRule.description"]},{"name":"fun description(description: String = \"\", rule: StringRule.() -> StringRule): OperationRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.OperationRule.description","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-operation-rule/description.html","searchKeys":["description","fun description(description: String = \"\", rule: StringRule.() -> StringRule): OperationRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.OperationRule.description"]},{"name":"fun description(description: String = \"\", rule: StringRule.() -> StringRule): ParameterRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ParameterRule.description","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-parameter-rule/description.html","searchKeys":["description","fun description(description: String = \"\", rule: StringRule.() -> StringRule): ParameterRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.ParameterRule.description"]},{"name":"fun description(description: String = \"\", rule: StringRule.() -> StringRule): PathRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.PathRule.description","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-path-rule/description.html","searchKeys":["description","fun description(description: String = \"\", rule: StringRule.() -> StringRule): PathRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.PathRule.description"]},{"name":"fun description(description: String = \"\", rule: StringRule.() -> StringRule): RequestBodyRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.RequestBodyRule.description","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-request-body-rule/description.html","searchKeys":["description","fun description(description: String = \"\", rule: StringRule.() -> StringRule): RequestBodyRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.RequestBodyRule.description"]},{"name":"fun description(description: String = \"\", rule: StringRule.() -> StringRule): ResponseRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ResponseRule.description","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-response-rule/description.html","searchKeys":["description","fun description(description: String = \"\", rule: StringRule.() -> StringRule): ResponseRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.ResponseRule.description"]},{"name":"fun description(description: String = \"\", rule: StringRule.() -> StringRule): SchemaRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.description","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-schema-rule/description.html","searchKeys":["description","fun description(description: String = \"\", rule: StringRule.() -> StringRule): SchemaRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.description"]},{"name":"fun description(description: String = \"\", rule: StringRule.() -> StringRule): ServerRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ServerRule.description","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-server-rule/description.html","searchKeys":["description","fun description(description: String = \"\", rule: StringRule.() -> StringRule): ServerRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.ServerRule.description"]},{"name":"fun description(description: String = \"\", rule: StringRule.() -> StringRule): ServerVariableRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ServerVariableRule.description","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-server-variable-rule/description.html","searchKeys":["description","fun description(description: String = \"\", rule: StringRule.() -> StringRule): ServerVariableRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.ServerVariableRule.description"]},{"name":"fun description(description: String = \"\", rule: StringRule.() -> StringRule): TagRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.TagRule.description","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-tag-rule/description.html","searchKeys":["description","fun description(description: String = \"\", rule: StringRule.() -> StringRule): TagRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.TagRule.description"]},{"name":"fun email(description: String = \"\", rule: StringRule.() -> StringRule): ContactRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ContactRule.email","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-contact-rule/email.html","searchKeys":["email","fun email(description: String = \"\", rule: StringRule.() -> StringRule): ContactRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.ContactRule.email"]},{"name":"fun encoding(description: String = \"\", named: String, rule: EncodingRule.() -> EncodingRule): EncodingsRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.EncodingsRule.encoding","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-encodings-rule/encoding.html","searchKeys":["encoding","fun encoding(description: String = \"\", named: String, rule: EncodingRule.() -> EncodingRule): EncodingsRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.EncodingsRule.encoding"]},{"name":"fun encoding(description: String = \"\", rule: EncodingsRule.() -> EncodingsRule): MediaTypeRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.MediaTypeRule.encoding","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-media-type-rule/encoding.html","searchKeys":["encoding","fun encoding(description: String = \"\", rule: EncodingsRule.() -> EncodingsRule): MediaTypeRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.MediaTypeRule.encoding"]},{"name":"fun enum(description: String = \"\", rule: IterableStringRule.() -> IterableStringRule): ServerVariableRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ServerVariableRule.enum","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-server-variable-rule/enum.html","searchKeys":["enum","fun enum(description: String = \"\", rule: IterableStringRule.() -> IterableStringRule): ServerVariableRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.ServerVariableRule.enum"]},{"name":"fun example(description: String = \"\", named: String, rule: ExampleRule.() -> ExampleRule): ExamplesRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ExamplesRule.example","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-examples-rule/example.html","searchKeys":["example","fun example(description: String = \"\", named: String, rule: ExampleRule.() -> ExampleRule): ExamplesRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ExamplesRule.example"]},{"name":"fun example(description: String = \"\", rule: AnyRule.() -> AnyRule): HeaderRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.HeaderRule.example","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-header-rule/example.html","searchKeys":["example","fun example(description: String = \"\", rule: AnyRule.() -> AnyRule): HeaderRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.HeaderRule.example"]},{"name":"fun example(description: String = \"\", rule: AnyRule.() -> AnyRule): MediaTypeRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.MediaTypeRule.example","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-media-type-rule/example.html","searchKeys":["example","fun example(description: String = \"\", rule: AnyRule.() -> AnyRule): MediaTypeRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.MediaTypeRule.example"]},{"name":"fun example(description: String = \"\", rule: AnyRule.() -> AnyRule): ParameterRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ParameterRule.example","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-parameter-rule/example.html","searchKeys":["example","fun example(description: String = \"\", rule: AnyRule.() -> AnyRule): ParameterRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.ParameterRule.example"]},{"name":"fun examples(description: String = \"\", rule: ExamplesRule.() -> ExamplesRule): ComponentsRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ComponentsRule.examples","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-components-rule/examples.html","searchKeys":["examples","fun examples(description: String = \"\", rule: ExamplesRule.() -> ExamplesRule): ComponentsRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ComponentsRule.examples"]},{"name":"fun examples(description: String = \"\", rule: ExamplesRule.() -> ExamplesRule): HeaderRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.HeaderRule.examples","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-header-rule/examples.html","searchKeys":["examples","fun examples(description: String = \"\", rule: ExamplesRule.() -> ExamplesRule): HeaderRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.HeaderRule.examples"]},{"name":"fun examples(description: String = \"\", rule: ExamplesRule.() -> ExamplesRule): MediaTypeRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.MediaTypeRule.examples","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-media-type-rule/examples.html","searchKeys":["examples","fun examples(description: String = \"\", rule: ExamplesRule.() -> ExamplesRule): MediaTypeRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.MediaTypeRule.examples"]},{"name":"fun examples(description: String = \"\", rule: ExamplesRule.() -> ExamplesRule): ParameterRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ParameterRule.examples","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-parameter-rule/examples.html","searchKeys":["examples","fun examples(description: String = \"\", rule: ExamplesRule.() -> ExamplesRule): ParameterRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.ParameterRule.examples"]},{"name":"fun exclusiveMaximum(description: String = \"\", rule: BooleanRule.() -> BooleanRule): SchemaRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.exclusiveMaximum","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-schema-rule/exclusive-maximum.html","searchKeys":["exclusiveMaximum","fun exclusiveMaximum(description: String = \"\", rule: BooleanRule.() -> BooleanRule): SchemaRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.exclusiveMaximum"]},{"name":"fun exclusiveMinimum(description: String = \"\", rule: BooleanRule.() -> BooleanRule): SchemaRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.exclusiveMinimum","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-schema-rule/exclusive-minimum.html","searchKeys":["exclusiveMinimum","fun exclusiveMinimum(description: String = \"\", rule: BooleanRule.() -> BooleanRule): SchemaRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.exclusiveMinimum"]},{"name":"fun explode(description: String = \"\", rule: BooleanRule.() -> BooleanRule): EncodingRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.EncodingRule.explode","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-encoding-rule/explode.html","searchKeys":["explode","fun explode(description: String = \"\", rule: BooleanRule.() -> BooleanRule): EncodingRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.EncodingRule.explode"]},{"name":"fun explode(description: String = \"\", rule: BooleanRule.() -> BooleanRule): HeaderRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.HeaderRule.explode","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-header-rule/explode.html","searchKeys":["explode","fun explode(description: String = \"\", rule: BooleanRule.() -> BooleanRule): HeaderRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.HeaderRule.explode"]},{"name":"fun explode(description: String = \"\", rule: BooleanRule.() -> BooleanRule): ParameterRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ParameterRule.explode","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-parameter-rule/explode.html","searchKeys":["explode","fun explode(description: String = \"\", rule: BooleanRule.() -> BooleanRule): ParameterRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.ParameterRule.explode"]},{"name":"fun externalDocs(description: String = \"\", rule: ExternalDocumentationRule.() -> ExternalDocumentationRule): OpenAPIRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.OpenAPIRule.externalDocs","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-open-a-p-i-rule/external-docs.html","searchKeys":["externalDocs","fun externalDocs(description: String = \"\", rule: ExternalDocumentationRule.() -> ExternalDocumentationRule): OpenAPIRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.OpenAPIRule.externalDocs"]},{"name":"fun externalDocs(description: String = \"\", rule: ExternalDocumentationRule.() -> ExternalDocumentationRule): OperationRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.OperationRule.externalDocs","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-operation-rule/external-docs.html","searchKeys":["externalDocs","fun externalDocs(description: String = \"\", rule: ExternalDocumentationRule.() -> ExternalDocumentationRule): OperationRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.OperationRule.externalDocs"]},{"name":"fun externalDocs(description: String = \"\", rule: ExternalDocumentationRule.() -> ExternalDocumentationRule): SchemaRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.externalDocs","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-schema-rule/external-docs.html","searchKeys":["externalDocs","fun externalDocs(description: String = \"\", rule: ExternalDocumentationRule.() -> ExternalDocumentationRule): SchemaRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.externalDocs"]},{"name":"fun externalDocs(description: String = \"\", rule: ExternalDocumentationRule.() -> ExternalDocumentationRule): TagRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.TagRule.externalDocs","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-tag-rule/external-docs.html","searchKeys":["externalDocs","fun externalDocs(description: String = \"\", rule: ExternalDocumentationRule.() -> ExternalDocumentationRule): TagRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.TagRule.externalDocs"]},{"name":"fun externalValue(description: String = \"\", rule: URIRule.() -> URIRule): ExampleRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ExampleRule.externalValue","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-example-rule/external-value.html","searchKeys":["externalValue","fun externalValue(description: String = \"\", rule: URIRule.() -> URIRule): ExampleRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.ExampleRule.externalValue"]},{"name":"fun failure(failure: ValidationFailure): ValidationResult","description":"io.github.stefankoppier.openapi.validator.core.ValidationResult.Companion.failure","location":"core/io.github.stefankoppier.openapi.validator.core/-validation-result/-companion/failure.html","searchKeys":["failure","fun failure(failure: ValidationFailure): ValidationResult","io.github.stefankoppier.openapi.validator.core.ValidationResult.Companion.failure"]},{"name":"fun failure(vararg failure: ValidationFailure): ValidationResult","description":"io.github.stefankoppier.openapi.validator.core.ValidationResult.Companion.failure","location":"core/io.github.stefankoppier.openapi.validator.core/-validation-result/-companion/failure.html","searchKeys":["failure","fun failure(vararg failure: ValidationFailure): ValidationResult","io.github.stefankoppier.openapi.validator.core.ValidationResult.Companion.failure"]},{"name":"fun format(description: String = \"\", rule: StringRule.() -> StringRule): SchemaRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.format","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-schema-rule/format.html","searchKeys":["format","fun format(description: String = \"\", rule: StringRule.() -> StringRule): SchemaRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.format"]},{"name":"fun get(description: String = \"\", rule: OperationRule.() -> OperationRule): PathRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.PathRule.get","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-path-rule/get.html","searchKeys":["get","fun get(description: String = \"\", rule: OperationRule.() -> OperationRule): PathRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.PathRule.get"]},{"name":"fun head(description: String = \"\", rule: OperationRule.() -> OperationRule): PathRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.PathRule.head","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-path-rule/head.html","searchKeys":["head","fun head(description: String = \"\", rule: OperationRule.() -> OperationRule): PathRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.PathRule.head"]},{"name":"fun header(description: String = \"\", named: String, rule: HeaderRule.() -> HeaderRule): HeadersRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.HeadersRule.header","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-headers-rule/header.html","searchKeys":["header","fun header(description: String = \"\", named: String, rule: HeaderRule.() -> HeaderRule): HeadersRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.HeadersRule.header"]},{"name":"fun headers(description: String = \"\", rule: HeadersRule.() -> HeadersRule): ComponentsRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ComponentsRule.headers","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-components-rule/headers.html","searchKeys":["headers","fun headers(description: String = \"\", rule: HeadersRule.() -> HeadersRule): ComponentsRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ComponentsRule.headers"]},{"name":"fun headers(description: String = \"\", rule: HeadersRule.() -> HeadersRule): EncodingRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.EncodingRule.headers","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-encoding-rule/headers.html","searchKeys":["headers","fun headers(description: String = \"\", rule: HeadersRule.() -> HeadersRule): EncodingRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.EncodingRule.headers"]},{"name":"fun identifier(description: String = \"\", rule: StringRule.() -> StringRule): LicenceRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.LicenceRule.identifier","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-licence-rule/identifier.html","searchKeys":["identifier","fun identifier(description: String = \"\", rule: StringRule.() -> StringRule): LicenceRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.LicenceRule.identifier"]},{"name":"fun in(description: String = \"\", rule: StringRule.() -> StringRule): ParameterRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ParameterRule.in","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-parameter-rule/in.html","searchKeys":["in","fun in(description: String = \"\", rule: StringRule.() -> StringRule): ParameterRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.ParameterRule.in"]},{"name":"fun info(description: String = \"\", rule: InfoRule.() -> InfoRule): OpenAPIRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.OpenAPIRule.info","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-open-a-p-i-rule/info.html","searchKeys":["info","fun info(description: String = \"\", rule: InfoRule.() -> InfoRule): OpenAPIRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.OpenAPIRule.info"]},{"name":"fun isFalse(): BooleanRule","description":"io.github.stefankoppier.openapi.validator.core.rules.primitives.BooleanRule.isFalse","location":"core/io.github.stefankoppier.openapi.validator.core.rules.primitives/-boolean-rule/is-false.html","searchKeys":["isFalse","fun isFalse(): BooleanRule","io.github.stefankoppier.openapi.validator.core.rules.primitives.BooleanRule.isFalse"]},{"name":"fun isTrue(): BooleanRule","description":"io.github.stefankoppier.openapi.validator.core.rules.primitives.BooleanRule.isTrue","location":"core/io.github.stefankoppier.openapi.validator.core.rules.primitives/-boolean-rule/is-true.html","searchKeys":["isTrue","fun isTrue(): BooleanRule","io.github.stefankoppier.openapi.validator.core.rules.primitives.BooleanRule.isTrue"]},{"name":"fun items(description: String = \"\", rule: SchemaRule.() -> SchemaRule): SchemaRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.items","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-schema-rule/items.html","searchKeys":["items","fun items(description: String = \"\", rule: SchemaRule.() -> SchemaRule): SchemaRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.items"]},{"name":"fun kebabcase(): StringRule","description":"io.github.stefankoppier.openapi.validator.core.rules.primitives.StringRule.kebabcase","location":"core/io.github.stefankoppier.openapi.validator.core.rules.primitives/-string-rule/kebabcase.html","searchKeys":["kebabcase","fun kebabcase(): StringRule","io.github.stefankoppier.openapi.validator.core.rules.primitives.StringRule.kebabcase"]},{"name":"fun licence(description: String = \"\", rule: LicenceRule.() -> LicenceRule): InfoRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.InfoRule.licence","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-info-rule/licence.html","searchKeys":["licence","fun licence(description: String = \"\", rule: LicenceRule.() -> LicenceRule): InfoRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.InfoRule.licence"]},{"name":"fun lowercase(): StringRule","description":"io.github.stefankoppier.openapi.validator.core.rules.primitives.StringRule.lowercase","location":"core/io.github.stefankoppier.openapi.validator.core.rules.primitives/-string-rule/lowercase.html","searchKeys":["lowercase","fun lowercase(): StringRule","io.github.stefankoppier.openapi.validator.core.rules.primitives.StringRule.lowercase"]},{"name":"fun matches(regex: Regex): StringRule","description":"io.github.stefankoppier.openapi.validator.core.rules.primitives.StringRule.matches","location":"core/io.github.stefankoppier.openapi.validator.core.rules.primitives/-string-rule/matches.html","searchKeys":["matches","fun matches(regex: Regex): StringRule","io.github.stefankoppier.openapi.validator.core.rules.primitives.StringRule.matches"]},{"name":"fun max(value: BigDecimal): BigDecimalRule","description":"io.github.stefankoppier.openapi.validator.core.rules.primitives.BigDecimalRule.max","location":"core/io.github.stefankoppier.openapi.validator.core.rules.primitives/-big-decimal-rule/max.html","searchKeys":["max","fun max(value: BigDecimal): BigDecimalRule","io.github.stefankoppier.openapi.validator.core.rules.primitives.BigDecimalRule.max"]},{"name":"fun max(value: Int): IntegerRule","description":"io.github.stefankoppier.openapi.validator.core.rules.primitives.IntegerRule.max","location":"core/io.github.stefankoppier.openapi.validator.core.rules.primitives/-integer-rule/max.html","searchKeys":["max","fun max(value: Int): IntegerRule","io.github.stefankoppier.openapi.validator.core.rules.primitives.IntegerRule.max"]},{"name":"fun maxItems(description: String = \"\", rule: IntegerRule.() -> IntegerRule): SchemaRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.maxItems","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-schema-rule/max-items.html","searchKeys":["maxItems","fun maxItems(description: String = \"\", rule: IntegerRule.() -> IntegerRule): SchemaRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.maxItems"]},{"name":"fun maxLength(description: String = \"\", rule: IntegerRule.() -> IntegerRule): SchemaRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.maxLength","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-schema-rule/max-length.html","searchKeys":["maxLength","fun maxLength(description: String = \"\", rule: IntegerRule.() -> IntegerRule): SchemaRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.maxLength"]},{"name":"fun maxProperties(description: String = \"\", rule: IntegerRule.() -> IntegerRule): SchemaRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.maxProperties","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-schema-rule/max-properties.html","searchKeys":["maxProperties","fun maxProperties(description: String = \"\", rule: IntegerRule.() -> IntegerRule): SchemaRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.maxProperties"]},{"name":"fun maximum(description: String = \"\", rule: BigDecimalRule.() -> BigDecimalRule): SchemaRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.maximum","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-schema-rule/maximum.html","searchKeys":["maximum","fun maximum(description: String = \"\", rule: BigDecimalRule.() -> BigDecimalRule): SchemaRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.maximum"]},{"name":"fun mediaType(description: String = \"\", named: String, rule: MediaTypeRule.() -> MediaTypeRule): ContentRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ContentRule.mediaType","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-content-rule/media-type.html","searchKeys":["mediaType","fun mediaType(description: String = \"\", named: String, rule: MediaTypeRule.() -> MediaTypeRule): ContentRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.ContentRule.mediaType"]},{"name":"fun mediaType(description: String = \"\", named: String, rule: MediaTypeRule.() -> MediaTypeRule): ContentRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ContentRule.mediaType","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-content-rule/media-type.html","searchKeys":["mediaType","fun mediaType(description: String = \"\", named: String, rule: MediaTypeRule.() -> MediaTypeRule): ContentRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ContentRule.mediaType"]},{"name":"fun min(value: BigDecimal): BigDecimalRule","description":"io.github.stefankoppier.openapi.validator.core.rules.primitives.BigDecimalRule.min","location":"core/io.github.stefankoppier.openapi.validator.core.rules.primitives/-big-decimal-rule/min.html","searchKeys":["min","fun min(value: BigDecimal): BigDecimalRule","io.github.stefankoppier.openapi.validator.core.rules.primitives.BigDecimalRule.min"]},{"name":"fun min(value: Int): IntegerRule","description":"io.github.stefankoppier.openapi.validator.core.rules.primitives.IntegerRule.min","location":"core/io.github.stefankoppier.openapi.validator.core.rules.primitives/-integer-rule/min.html","searchKeys":["min","fun min(value: Int): IntegerRule","io.github.stefankoppier.openapi.validator.core.rules.primitives.IntegerRule.min"]},{"name":"fun minItems(description: String = \"\", rule: IntegerRule.() -> IntegerRule): SchemaRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.minItems","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-schema-rule/min-items.html","searchKeys":["minItems","fun minItems(description: String = \"\", rule: IntegerRule.() -> IntegerRule): SchemaRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.minItems"]},{"name":"fun minLength(description: String = \"\", rule: IntegerRule.() -> IntegerRule): SchemaRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.minLength","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-schema-rule/min-length.html","searchKeys":["minLength","fun minLength(description: String = \"\", rule: IntegerRule.() -> IntegerRule): SchemaRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.minLength"]},{"name":"fun minProperties(description: String = \"\", rule: IntegerRule.() -> IntegerRule): SchemaRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.minProperties","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-schema-rule/min-properties.html","searchKeys":["minProperties","fun minProperties(description: String = \"\", rule: IntegerRule.() -> IntegerRule): SchemaRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.minProperties"]},{"name":"fun minimum(description: String = \"\", rule: BigDecimalRule.() -> BigDecimalRule): SchemaRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.minimum","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-schema-rule/minimum.html","searchKeys":["minimum","fun minimum(description: String = \"\", rule: BigDecimalRule.() -> BigDecimalRule): SchemaRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.minimum"]},{"name":"fun multipleOf(description: String = \"\", rule: BigDecimalRule.() -> BigDecimalRule): SchemaRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.multipleOf","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-schema-rule/multiple-of.html","searchKeys":["multipleOf","fun multipleOf(description: String = \"\", rule: BigDecimalRule.() -> BigDecimalRule): SchemaRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.multipleOf"]},{"name":"fun name(description: String = \"\", rule: StringRule.() -> StringRule): ContactRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ContactRule.name","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-contact-rule/name.html","searchKeys":["name","fun name(description: String = \"\", rule: StringRule.() -> StringRule): ContactRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.ContactRule.name"]},{"name":"fun name(description: String = \"\", rule: StringRule.() -> StringRule): LicenceRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.LicenceRule.name","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-licence-rule/name.html","searchKeys":["name","fun name(description: String = \"\", rule: StringRule.() -> StringRule): LicenceRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.LicenceRule.name"]},{"name":"fun name(description: String = \"\", rule: StringRule.() -> StringRule): ParameterRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ParameterRule.name","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-parameter-rule/name.html","searchKeys":["name","fun name(description: String = \"\", rule: StringRule.() -> StringRule): ParameterRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.ParameterRule.name"]},{"name":"fun name(description: String = \"\", rule: StringRule.() -> StringRule): SchemaRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.name","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-schema-rule/name.html","searchKeys":["name","fun name(description: String = \"\", rule: StringRule.() -> StringRule): SchemaRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.name"]},{"name":"fun name(description: String = \"\", rule: StringRule.() -> StringRule): TagRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.TagRule.name","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-tag-rule/name.html","searchKeys":["name","fun name(description: String = \"\", rule: StringRule.() -> StringRule): TagRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.TagRule.name"]},{"name":"fun named(name: String, description: String, category: RuleGroup.Category, parent: RuleGroup? = null): RuleGroup","description":"io.github.stefankoppier.openapi.validator.core.rules.RuleGroup.Companion.named","location":"core/io.github.stefankoppier.openapi.validator.core.rules/-rule-group/-companion/named.html","searchKeys":["named","fun named(name: String, description: String, category: RuleGroup.Category, parent: RuleGroup? = null): RuleGroup","io.github.stefankoppier.openapi.validator.core.rules.RuleGroup.Companion.named"]},{"name":"fun nullable(description: String = \"\", rule: BooleanRule.() -> BooleanRule): SchemaRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.nullable","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-schema-rule/nullable.html","searchKeys":["nullable","fun nullable(description: String = \"\", rule: BooleanRule.() -> BooleanRule): SchemaRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.nullable"]},{"name":"fun numeric(): StringRule","description":"io.github.stefankoppier.openapi.validator.core.rules.primitives.StringRule.numeric","location":"core/io.github.stefankoppier.openapi.validator.core.rules.primitives/-string-rule/numeric.html","searchKeys":["numeric","fun numeric(): StringRule","io.github.stefankoppier.openapi.validator.core.rules.primitives.StringRule.numeric"]},{"name":"fun openAPI(description: String = \"\", rule: OpenAPIRule.() -> OpenAPIRule): OpenAPIRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.openAPI","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/open-a-p-i.html","searchKeys":["openAPI","fun openAPI(description: String = \"\", rule: OpenAPIRule.() -> OpenAPIRule): OpenAPIRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.openAPI"]},{"name":"fun openapi(description: String = \"\", rule: StringRule.() -> StringRule): OpenAPIRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.OpenAPIRule.openapi","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-open-a-p-i-rule/openapi.html","searchKeys":["openapi","fun openapi(description: String = \"\", rule: StringRule.() -> StringRule): OpenAPIRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.OpenAPIRule.openapi"]},{"name":"fun operationId(description: String = \"\", rule: StringRule.() -> StringRule): OperationRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.OperationRule.operationId","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-operation-rule/operation-id.html","searchKeys":["operationId","fun operationId(description: String = \"\", rule: StringRule.() -> StringRule): OperationRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.OperationRule.operationId"]},{"name":"fun operations(description: String = \"\", rule: OperationRule.() -> OperationRule): PathRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.PathRule.operations","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-path-rule/operations.html","searchKeys":["operations","fun operations(description: String = \"\", rule: OperationRule.() -> OperationRule): PathRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.PathRule.operations"]},{"name":"fun options(description: String = \"\", rule: OperationRule.() -> OperationRule): PathRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.PathRule.options","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-path-rule/options.html","searchKeys":["options","fun options(description: String = \"\", rule: OperationRule.() -> OperationRule): PathRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.PathRule.options"]},{"name":"fun parameter(description: String = \"\", named: String, rule: ParameterRule.() -> ParameterRule): ParametersRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ParametersRule.parameter","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-parameters-rule/parameter.html","searchKeys":["parameter","fun parameter(description: String = \"\", named: String, rule: ParameterRule.() -> ParameterRule): ParametersRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ParametersRule.parameter"]},{"name":"fun parameters(description: String = \"\", rule: ParametersRule.() -> ParametersRule): ComponentsRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ComponentsRule.parameters","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-components-rule/parameters.html","searchKeys":["parameters","fun parameters(description: String = \"\", rule: ParametersRule.() -> ParametersRule): ComponentsRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ComponentsRule.parameters"]},{"name":"fun parameters(description: String = \"\", rule: ParametersRule.() -> ParametersRule): OperationRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.OperationRule.parameters","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-operation-rule/parameters.html","searchKeys":["parameters","fun parameters(description: String = \"\", rule: ParametersRule.() -> ParametersRule): OperationRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.OperationRule.parameters"]},{"name":"fun parameters(description: String = \"\", rule: ParametersRule.() -> ParametersRule): PathRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.PathRule.parameters","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-path-rule/parameters.html","searchKeys":["parameters","fun parameters(description: String = \"\", rule: ParametersRule.() -> ParametersRule): PathRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.PathRule.parameters"]},{"name":"fun parse(path: URI): Result<OpenAPI>","description":"io.github.stefankoppier.openapi.validator.core.Parser.parse","location":"core/io.github.stefankoppier.openapi.validator.core/-parser/parse.html","searchKeys":["parse","fun parse(path: URI): Result<OpenAPI>","io.github.stefankoppier.openapi.validator.core.Parser.parse"]},{"name":"fun parse(yaml: String): Result<OpenAPI>","description":"io.github.stefankoppier.openapi.validator.core.Parser.parse","location":"core/io.github.stefankoppier.openapi.validator.core/-parser/parse.html","searchKeys":["parse","fun parse(yaml: String): Result<OpenAPI>","io.github.stefankoppier.openapi.validator.core.Parser.parse"]},{"name":"fun patch(description: String = \"\", rule: OperationRule.() -> OperationRule): PathRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.PathRule.patch","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-path-rule/patch.html","searchKeys":["patch","fun patch(description: String = \"\", rule: OperationRule.() -> OperationRule): PathRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.PathRule.patch"]},{"name":"fun path(description: String = \"\", named: String, rule: PathRule.() -> PathRule): PathsRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.PathsRule.path","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-paths-rule/path.html","searchKeys":["path","fun path(description: String = \"\", named: String, rule: PathRule.() -> PathRule): PathsRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.PathsRule.path"]},{"name":"fun paths(description: String = \"\", rule: PathsRule.() -> PathsRule): OpenAPIRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.OpenAPIRule.paths","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-open-a-p-i-rule/paths.html","searchKeys":["paths","fun paths(description: String = \"\", rule: PathsRule.() -> PathsRule): OpenAPIRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.OpenAPIRule.paths"]},{"name":"fun pattern(description: String = \"\", rule: StringRule.() -> StringRule): SchemaRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.pattern","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-schema-rule/pattern.html","searchKeys":["pattern","fun pattern(description: String = \"\", rule: StringRule.() -> StringRule): SchemaRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.pattern"]},{"name":"fun post(description: String = \"\", rule: OperationRule.() -> OperationRule): PathRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.PathRule.post","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-path-rule/post.html","searchKeys":["post","fun post(description: String = \"\", rule: OperationRule.() -> OperationRule): PathRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.PathRule.post"]},{"name":"fun put(description: String = \"\", rule: OperationRule.() -> OperationRule): PathRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.PathRule.put","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-path-rule/put.html","searchKeys":["put","fun put(description: String = \"\", rule: OperationRule.() -> OperationRule): PathRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.PathRule.put"]},{"name":"fun readOnly(description: String = \"\", rule: BooleanRule.() -> BooleanRule): SchemaRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.readOnly","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-schema-rule/read-only.html","searchKeys":["readOnly","fun readOnly(description: String = \"\", rule: BooleanRule.() -> BooleanRule): SchemaRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.readOnly"]},{"name":"fun ref(description: String = \"\", rule: StringRule.() -> StringRule): SchemaRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.ref","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-schema-rule/ref.html","searchKeys":["ref","fun ref(description: String = \"\", rule: StringRule.() -> StringRule): SchemaRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.ref"]},{"name":"fun requestBody(description: String = \"\", rule: RequestBodyRule.() -> RequestBodyRule): OperationRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.OperationRule.requestBody","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-operation-rule/request-body.html","searchKeys":["requestBody","fun requestBody(description: String = \"\", rule: RequestBodyRule.() -> RequestBodyRule): OperationRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.OperationRule.requestBody"]},{"name":"fun required(description: String = \"\", rule: BooleanRule.() -> BooleanRule): HeaderRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.HeaderRule.required","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-header-rule/required.html","searchKeys":["required","fun required(description: String = \"\", rule: BooleanRule.() -> BooleanRule): HeaderRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.HeaderRule.required"]},{"name":"fun required(description: String = \"\", rule: BooleanRule.() -> BooleanRule): ParameterRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ParameterRule.required","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-parameter-rule/required.html","searchKeys":["required","fun required(description: String = \"\", rule: BooleanRule.() -> BooleanRule): ParameterRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.ParameterRule.required"]},{"name":"fun required(description: String = \"\", rule: BooleanRule.() -> BooleanRule): RequestBodyRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.RequestBodyRule.required","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-request-body-rule/required.html","searchKeys":["required","fun required(description: String = \"\", rule: BooleanRule.() -> BooleanRule): RequestBodyRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.RequestBodyRule.required"]},{"name":"fun required(description: String = \"\", rule: IterableStringRule.() -> IterableStringRule): SchemaRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.required","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-schema-rule/required.html","searchKeys":["required","fun required(description: String = \"\", rule: IterableStringRule.() -> IterableStringRule): SchemaRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.required"]},{"name":"fun response(description: String = \"\", named: String, rule: ResponseRule.() -> ResponseRule): ResponsesRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ResponsesRule.response","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-responses-rule/response.html","searchKeys":["response","fun response(description: String = \"\", named: String, rule: ResponseRule.() -> ResponseRule): ResponsesRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ResponsesRule.response"]},{"name":"fun responses(description: String = \"\", rule: ResponsesRule.() -> ResponsesRule): ComponentsRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ComponentsRule.responses","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-components-rule/responses.html","searchKeys":["responses","fun responses(description: String = \"\", rule: ResponsesRule.() -> ResponsesRule): ComponentsRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ComponentsRule.responses"]},{"name":"fun responses(description: String = \"\", rule: ResponsesRule.() -> ResponsesRule): OperationRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.OperationRule.responses","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-operation-rule/responses.html","searchKeys":["responses","fun responses(description: String = \"\", rule: ResponsesRule.() -> ResponsesRule): OperationRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.OperationRule.responses"]},{"name":"fun schema(description: String = \"\", named: String, rule: SchemaRule.() -> SchemaRule): SchemasRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.SchemasRule.schema","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-schemas-rule/schema.html","searchKeys":["schema","fun schema(description: String = \"\", named: String, rule: SchemaRule.() -> SchemaRule): SchemasRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.SchemasRule.schema"]},{"name":"fun schema(description: String = \"\", rule: SchemaRule.() -> SchemaRule): HeaderRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.HeaderRule.schema","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-header-rule/schema.html","searchKeys":["schema","fun schema(description: String = \"\", rule: SchemaRule.() -> SchemaRule): HeaderRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.HeaderRule.schema"]},{"name":"fun schema(description: String = \"\", rule: SchemaRule.() -> SchemaRule): MediaTypeRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.MediaTypeRule.schema","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-media-type-rule/schema.html","searchKeys":["schema","fun schema(description: String = \"\", rule: SchemaRule.() -> SchemaRule): MediaTypeRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.MediaTypeRule.schema"]},{"name":"fun schema(description: String = \"\", rule: SchemaRule.() -> SchemaRule): ParameterRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ParameterRule.schema","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-parameter-rule/schema.html","searchKeys":["schema","fun schema(description: String = \"\", rule: SchemaRule.() -> SchemaRule): ParameterRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.ParameterRule.schema"]},{"name":"fun schemas(description: String = \"\", rule: SchemasRule.() -> SchemasRule): ComponentsRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ComponentsRule.schemas","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-components-rule/schemas.html","searchKeys":["schemas","fun schemas(description: String = \"\", rule: SchemasRule.() -> SchemasRule): ComponentsRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ComponentsRule.schemas"]},{"name":"fun security(description: String = \"\", rule: SecurityRequirementsRule.() -> SecurityRequirementsRule): OpenAPIRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.OpenAPIRule.security","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-open-a-p-i-rule/security.html","searchKeys":["security","fun security(description: String = \"\", rule: SecurityRequirementsRule.() -> SecurityRequirementsRule): OpenAPIRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.OpenAPIRule.security"]},{"name":"fun security(description: String = \"\", rule: SecurityRequirementsRule.() -> SecurityRequirementsRule): OperationRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.OperationRule.security","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-operation-rule/security.html","searchKeys":["security","fun security(description: String = \"\", rule: SecurityRequirementsRule.() -> SecurityRequirementsRule): OperationRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.OperationRule.security"]},{"name":"fun server(description: String = \"\", url: String, rule: ServerRule.() -> ServerRule): ServersRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ServersRule.server","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-servers-rule/server.html","searchKeys":["server","fun server(description: String = \"\", url: String, rule: ServerRule.() -> ServerRule): ServersRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ServersRule.server"]},{"name":"fun serverVariable(description: String = \"\", named: String, rule: ServerVariableRule.() -> ServerVariableRule): ServerVariablesRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ServerVariablesRule.serverVariable","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-server-variables-rule/server-variable.html","searchKeys":["serverVariable","fun serverVariable(description: String = \"\", named: String, rule: ServerVariableRule.() -> ServerVariableRule): ServerVariablesRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.ServerVariablesRule.serverVariable"]},{"name":"fun servers(description: String = \"\", rule: ServersRule.() -> ServersRule): OperationRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.OperationRule.servers","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-operation-rule/servers.html","searchKeys":["servers","fun servers(description: String = \"\", rule: ServersRule.() -> ServersRule): OperationRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.OperationRule.servers"]},{"name":"fun servers(description: String = \"\", rule: ServersRule.() -> ServersRule): PathRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.PathRule.servers","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-path-rule/servers.html","searchKeys":["servers","fun servers(description: String = \"\", rule: ServersRule.() -> ServersRule): PathRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.PathRule.servers"]},{"name":"fun snakecase(): StringRule","description":"io.github.stefankoppier.openapi.validator.core.rules.primitives.StringRule.snakecase","location":"core/io.github.stefankoppier.openapi.validator.core.rules.primitives/-string-rule/snakecase.html","searchKeys":["snakecase","fun snakecase(): StringRule","io.github.stefankoppier.openapi.validator.core.rules.primitives.StringRule.snakecase"]},{"name":"fun style(description: String = \"\", rule: EnumRule<Encoding.StyleEnum>.() -> EnumRule<Encoding.StyleEnum>): EncodingRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.EncodingRule.style","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-encoding-rule/style.html","searchKeys":["style","fun style(description: String = \"\", rule: EnumRule<Encoding.StyleEnum>.() -> EnumRule<Encoding.StyleEnum>): EncodingRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.EncodingRule.style"]},{"name":"fun style(description: String = \"\", rule: EnumRule<Header.StyleEnum>.() -> EnumRule<Header.StyleEnum>): HeaderRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.HeaderRule.style","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-header-rule/style.html","searchKeys":["style","fun style(description: String = \"\", rule: EnumRule<Header.StyleEnum>.() -> EnumRule<Header.StyleEnum>): HeaderRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.HeaderRule.style"]},{"name":"fun style(description: String = \"\", rule: EnumRule<Parameter.StyleEnum>.() -> EnumRule<Parameter.StyleEnum>): ParameterRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ParameterRule.style","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-parameter-rule/style.html","searchKeys":["style","fun style(description: String = \"\", rule: EnumRule<Parameter.StyleEnum>.() -> EnumRule<Parameter.StyleEnum>): ParameterRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.ParameterRule.style"]},{"name":"fun success(): ValidationResult","description":"io.github.stefankoppier.openapi.validator.core.ValidationResult.Companion.success","location":"core/io.github.stefankoppier.openapi.validator.core/-validation-result/-companion/success.html","searchKeys":["success","fun success(): ValidationResult","io.github.stefankoppier.openapi.validator.core.ValidationResult.Companion.success"]},{"name":"fun summarize(): String","description":"io.github.stefankoppier.openapi.validator.core.ValidationResult.summarize","location":"core/io.github.stefankoppier.openapi.validator.core/-validation-result/summarize.html","searchKeys":["summarize","fun summarize(): String","io.github.stefankoppier.openapi.validator.core.ValidationResult.summarize"]},{"name":"fun summary(description: String = \"\", rule: StringRule.() -> StringRule): ExampleRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ExampleRule.summary","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-example-rule/summary.html","searchKeys":["summary","fun summary(description: String = \"\", rule: StringRule.() -> StringRule): ExampleRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.ExampleRule.summary"]},{"name":"fun summary(description: String = \"\", rule: StringRule.() -> StringRule): InfoRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.InfoRule.summary","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-info-rule/summary.html","searchKeys":["summary","fun summary(description: String = \"\", rule: StringRule.() -> StringRule): InfoRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.InfoRule.summary"]},{"name":"fun summary(description: String = \"\", rule: StringRule.() -> StringRule): OperationRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.OperationRule.summary","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-operation-rule/summary.html","searchKeys":["summary","fun summary(description: String = \"\", rule: StringRule.() -> StringRule): OperationRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.OperationRule.summary"]},{"name":"fun summary(description: String = \"\", rule: StringRule.() -> StringRule): PathRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.PathRule.summary","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-path-rule/summary.html","searchKeys":["summary","fun summary(description: String = \"\", rule: StringRule.() -> StringRule): PathRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.PathRule.summary"]},{"name":"fun tag(description: String = \"\", named: String, rule: TagRule.() -> TagRule): TagsRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.TagsRule.tag","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi.collections/-tags-rule/tag.html","searchKeys":["tag","fun tag(description: String = \"\", named: String, rule: TagRule.() -> TagRule): TagsRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.collections.TagsRule.tag"]},{"name":"fun tags(description: String = \"\", rule: IterableStringRule.() -> IterableStringRule): OperationRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.OperationRule.tags","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-operation-rule/tags.html","searchKeys":["tags","fun tags(description: String = \"\", rule: IterableStringRule.() -> IterableStringRule): OperationRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.OperationRule.tags"]},{"name":"fun tags(description: String = \"\", rule: TagsRule.() -> TagsRule): OpenAPIRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.OpenAPIRule.tags","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-open-a-p-i-rule/tags.html","searchKeys":["tags","fun tags(description: String = \"\", rule: TagsRule.() -> TagsRule): OpenAPIRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.OpenAPIRule.tags"]},{"name":"fun termsOfService(description: String = \"\", rule: StringRule.() -> StringRule): InfoRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.InfoRule.termsOfService","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-info-rule/terms-of-service.html","searchKeys":["termsOfService","fun termsOfService(description: String = \"\", rule: StringRule.() -> StringRule): InfoRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.InfoRule.termsOfService"]},{"name":"fun title(description: String = \"\", rule: StringRule.() -> StringRule): InfoRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.InfoRule.title","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-info-rule/title.html","searchKeys":["title","fun title(description: String = \"\", rule: StringRule.() -> StringRule): InfoRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.InfoRule.title"]},{"name":"fun title(description: String = \"\", rule: StringRule.() -> StringRule): SchemaRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.title","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-schema-rule/title.html","searchKeys":["title","fun title(description: String = \"\", rule: StringRule.() -> StringRule): SchemaRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.title"]},{"name":"fun trace(description: String = \"\", rule: OperationRule.() -> OperationRule): PathRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.PathRule.trace","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-path-rule/trace.html","searchKeys":["trace","fun trace(description: String = \"\", rule: OperationRule.() -> OperationRule): PathRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.PathRule.trace"]},{"name":"fun type(description: String = \"\", rule: StringRule.() -> StringRule): SchemaRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.type","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-schema-rule/type.html","searchKeys":["type","fun type(description: String = \"\", rule: StringRule.() -> StringRule): SchemaRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.type"]},{"name":"fun uniqueItems(description: String = \"\", rule: BooleanRule.() -> BooleanRule): SchemaRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.uniqueItems","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-schema-rule/unique-items.html","searchKeys":["uniqueItems","fun uniqueItems(description: String = \"\", rule: BooleanRule.() -> BooleanRule): SchemaRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.uniqueItems"]},{"name":"fun unknown(): RuleGroup","description":"io.github.stefankoppier.openapi.validator.core.rules.RuleGroup.Companion.unknown","location":"core/io.github.stefankoppier.openapi.validator.core.rules/-rule-group/-companion/unknown.html","searchKeys":["unknown","fun unknown(): RuleGroup","io.github.stefankoppier.openapi.validator.core.rules.RuleGroup.Companion.unknown"]},{"name":"fun uppercase(): StringRule","description":"io.github.stefankoppier.openapi.validator.core.rules.primitives.StringRule.uppercase","location":"core/io.github.stefankoppier.openapi.validator.core.rules.primitives/-string-rule/uppercase.html","searchKeys":["uppercase","fun uppercase(): StringRule","io.github.stefankoppier.openapi.validator.core.rules.primitives.StringRule.uppercase"]},{"name":"fun url(description: String = \"\", rule: URLRule.() -> URLRule): ContactRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ContactRule.url","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-contact-rule/url.html","searchKeys":["url","fun url(description: String = \"\", rule: URLRule.() -> URLRule): ContactRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.ContactRule.url"]},{"name":"fun url(description: String = \"\", rule: URLRule.() -> URLRule): ExternalDocumentationRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ExternalDocumentationRule.url","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-external-documentation-rule/url.html","searchKeys":["url","fun url(description: String = \"\", rule: URLRule.() -> URLRule): ExternalDocumentationRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.ExternalDocumentationRule.url"]},{"name":"fun url(description: String = \"\", rule: URLRule.() -> URLRule): LicenceRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.LicenceRule.url","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-licence-rule/url.html","searchKeys":["url","fun url(description: String = \"\", rule: URLRule.() -> URLRule): LicenceRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.LicenceRule.url"]},{"name":"fun url(description: String = \"\", rule: URLRule.() -> URLRule): ServerRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ServerRule.url","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-server-rule/url.html","searchKeys":["url","fun url(description: String = \"\", rule: URLRule.() -> URLRule): ServerRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.ServerRule.url"]},{"name":"fun validate(document: OpenAPI): ValidationResult","description":"io.github.stefankoppier.openapi.validator.core.Validator.validate","location":"core/io.github.stefankoppier.openapi.validator.core/-validator/validate.html","searchKeys":["validate","fun validate(document: OpenAPI): ValidationResult","io.github.stefankoppier.openapi.validator.core.Validator.validate"]},{"name":"fun validate(fixture: String?): ValidationResult","description":"io.github.stefankoppier.openapi.validator.core.rules.primitives.URIRule.validate","location":"core/io.github.stefankoppier.openapi.validator.core.rules.primitives/-u-r-i-rule/validate.html","searchKeys":["validate","fun validate(fixture: String?): ValidationResult","io.github.stefankoppier.openapi.validator.core.rules.primitives.URIRule.validate"]},{"name":"fun validate(fixture: String?): ValidationResult","description":"io.github.stefankoppier.openapi.validator.core.rules.primitives.URLRule.validate","location":"core/io.github.stefankoppier.openapi.validator.core.rules.primitives/-u-r-l-rule/validate.html","searchKeys":["validate","fun validate(fixture: String?): ValidationResult","io.github.stefankoppier.openapi.validator.core.rules.primitives.URLRule.validate"]},{"name":"fun validate(fixture: T?): ValidationResult","description":"io.github.stefankoppier.openapi.validator.core.rules.ValidationRule.validate","location":"core/io.github.stefankoppier.openapi.validator.core.rules/-validation-rule/validate.html","searchKeys":["validate","fun validate(fixture: T?): ValidationResult","io.github.stefankoppier.openapi.validator.core.rules.ValidationRule.validate"]},{"name":"fun value(description: String = \"\", rule: AnyRule.() -> AnyRule): ExampleRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ExampleRule.value","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-example-rule/value.html","searchKeys":["value","fun value(description: String = \"\", rule: AnyRule.() -> AnyRule): ExampleRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.ExampleRule.value"]},{"name":"fun valueOf(value: String): RuleGroup.Category","description":"io.github.stefankoppier.openapi.validator.core.rules.RuleGroup.Category.valueOf","location":"core/io.github.stefankoppier.openapi.validator.core.rules/-rule-group/-category/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RuleGroup.Category","io.github.stefankoppier.openapi.validator.core.rules.RuleGroup.Category.valueOf"]},{"name":"fun values(): Array<RuleGroup.Category>","description":"io.github.stefankoppier.openapi.validator.core.rules.RuleGroup.Category.values","location":"core/io.github.stefankoppier.openapi.validator.core.rules/-rule-group/-category/values.html","searchKeys":["values","fun values(): Array<RuleGroup.Category>","io.github.stefankoppier.openapi.validator.core.rules.RuleGroup.Category.values"]},{"name":"fun variables(description: String = \"\", rule: ServerVariablesRule.() -> ServerVariablesRule): ServerRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.ServerRule.variables","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-server-rule/variables.html","searchKeys":["variables","fun variables(description: String = \"\", rule: ServerVariablesRule.() -> ServerVariablesRule): ServerRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.ServerRule.variables"]},{"name":"fun version(description: String = \"\", rule: StringRule.() -> StringRule): InfoRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.InfoRule.version","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-info-rule/version.html","searchKeys":["version","fun version(description: String = \"\", rule: StringRule.() -> StringRule): InfoRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.InfoRule.version"]},{"name":"fun writeOnly(description: String = \"\", rule: BooleanRule.() -> BooleanRule): SchemaRule","description":"io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.writeOnly","location":"core/io.github.stefankoppier.openapi.validator.core.rules.openapi/-schema-rule/write-only.html","searchKeys":["writeOnly","fun writeOnly(description: String = \"\", rule: BooleanRule.() -> BooleanRule): SchemaRule","io.github.stefankoppier.openapi.validator.core.rules.openapi.SchemaRule.writeOnly"]},{"name":"infix fun merge(other: ValidationResult): ValidationResult","description":"io.github.stefankoppier.openapi.validator.core.ValidationResult.merge","location":"core/io.github.stefankoppier.openapi.validator.core/-validation-result/merge.html","searchKeys":["merge","infix fun merge(other: ValidationResult): ValidationResult","io.github.stefankoppier.openapi.validator.core.ValidationResult.merge"]},{"name":"object Companion","description":"io.github.stefankoppier.openapi.validator.core.ValidationResult.Companion","location":"core/io.github.stefankoppier.openapi.validator.core/-validation-result/-companion/index.html","searchKeys":["Companion","object Companion","io.github.stefankoppier.openapi.validator.core.ValidationResult.Companion"]},{"name":"object Companion","description":"io.github.stefankoppier.openapi.validator.core.rules.RuleGroup.Companion","location":"core/io.github.stefankoppier.openapi.validator.core.rules/-rule-group/-companion/index.html","searchKeys":["Companion","object Companion","io.github.stefankoppier.openapi.validator.core.rules.RuleGroup.Companion"]},{"name":"val category: RuleGroup.Category","description":"io.github.stefankoppier.openapi.validator.core.ValidationNode.category","location":"core/io.github.stefankoppier.openapi.validator.core/-validation-node/category.html","searchKeys":["category","val category: RuleGroup.Category","io.github.stefankoppier.openapi.validator.core.ValidationNode.category"]},{"name":"val category: RuleGroup.Category","description":"io.github.stefankoppier.openapi.validator.core.rules.RuleGroup.category","location":"core/io.github.stefankoppier.openapi.validator.core.rules/-rule-group/category.html","searchKeys":["category","val category: RuleGroup.Category","io.github.stefankoppier.openapi.validator.core.rules.RuleGroup.category"]},{"name":"val content: String","description":"io.github.stefankoppier.openapi.validator.core.ValidationNode.content","location":"core/io.github.stefankoppier.openapi.validator.core/-validation-node/content.html","searchKeys":["content","val content: String","io.github.stefankoppier.openapi.validator.core.ValidationNode.content"]},{"name":"val description: String","description":"io.github.stefankoppier.openapi.validator.core.rules.RuleGroup.description","location":"core/io.github.stefankoppier.openapi.validator.core.rules/-rule-group/description.html","searchKeys":["description","val description: String","io.github.stefankoppier.openapi.validator.core.rules.RuleGroup.description"]},{"name":"val failures: MutableList<ValidationFailure>","description":"io.github.stefankoppier.openapi.validator.core.ValidationResult.failures","location":"core/io.github.stefankoppier.openapi.validator.core/-validation-result/failures.html","searchKeys":["failures","val failures: MutableList<ValidationFailure>","io.github.stefankoppier.openapi.validator.core.ValidationResult.failures"]},{"name":"val group: RuleGroup","description":"io.github.stefankoppier.openapi.validator.core.ValidationFailure.group","location":"core/io.github.stefankoppier.openapi.validator.core/-validation-failure/group.html","searchKeys":["group","val group: RuleGroup","io.github.stefankoppier.openapi.validator.core.ValidationFailure.group"]},{"name":"val isFailure: Boolean","description":"io.github.stefankoppier.openapi.validator.core.ValidationResult.isFailure","location":"core/io.github.stefankoppier.openapi.validator.core/-validation-result/is-failure.html","searchKeys":["isFailure","val isFailure: Boolean","io.github.stefankoppier.openapi.validator.core.ValidationResult.isFailure"]},{"name":"val isSuccess: Boolean","description":"io.github.stefankoppier.openapi.validator.core.ValidationResult.isSuccess","location":"core/io.github.stefankoppier.openapi.validator.core/-validation-result/is-success.html","searchKeys":["isSuccess","val isSuccess: Boolean","io.github.stefankoppier.openapi.validator.core.ValidationResult.isSuccess"]},{"name":"val message: String","description":"io.github.stefankoppier.openapi.validator.core.ValidationFailure.message","location":"core/io.github.stefankoppier.openapi.validator.core/-validation-failure/message.html","searchKeys":["message","val message: String","io.github.stefankoppier.openapi.validator.core.ValidationFailure.message"]},{"name":"val name: String","description":"io.github.stefankoppier.openapi.validator.core.rules.RuleGroup.name","location":"core/io.github.stefankoppier.openapi.validator.core.rules/-rule-group/name.html","searchKeys":["name","val name: String","io.github.stefankoppier.openapi.validator.core.rules.RuleGroup.name"]},{"name":"val parent: RuleGroup?","description":"io.github.stefankoppier.openapi.validator.core.rules.RuleGroup.parent","location":"core/io.github.stefankoppier.openapi.validator.core.rules/-rule-group/parent.html","searchKeys":["parent","val parent: RuleGroup?","io.github.stefankoppier.openapi.validator.core.rules.RuleGroup.parent"]},{"name":"annotation class OpenAPITest(val relativeUrl: String)","description":"io.github.stefankoppier.openapi.validator.junit.OpenAPITest","location":"integration-junit/io.github.stefankoppier.openapi.validator.junit/-open-a-p-i-test/index.html","searchKeys":["OpenAPITest","annotation class OpenAPITest(val relativeUrl: String)","io.github.stefankoppier.openapi.validator.junit.OpenAPITest"]},{"name":"class OpenAPIValidationExtension : ParameterResolver","description":"io.github.stefankoppier.openapi.validator.junit.OpenAPIValidationExtension","location":"integration-junit/io.github.stefankoppier.openapi.validator.junit/-open-a-p-i-validation-extension/index.html","searchKeys":["OpenAPIValidationExtension","class OpenAPIValidationExtension : ParameterResolver","io.github.stefankoppier.openapi.validator.junit.OpenAPIValidationExtension"]},{"name":"constructor()","description":"io.github.stefankoppier.openapi.validator.junit.OpenAPIValidationExtension.OpenAPIValidationExtension","location":"integration-junit/io.github.stefankoppier.openapi.validator.junit/-open-a-p-i-validation-extension/-open-a-p-i-validation-extension.html","searchKeys":["OpenAPIValidationExtension","constructor()","io.github.stefankoppier.openapi.validator.junit.OpenAPIValidationExtension.OpenAPIValidationExtension"]},{"name":"fun assertDocumentIsValidFor(document: OpenAPI, rule: OpenAPIRule)","description":"io.github.stefankoppier.openapi.validator.junit.assertDocumentIsValidFor","location":"integration-junit/io.github.stefankoppier.openapi.validator.junit/assert-document-is-valid-for.html","searchKeys":["assertDocumentIsValidFor","fun assertDocumentIsValidFor(document: OpenAPI, rule: OpenAPIRule)","io.github.stefankoppier.openapi.validator.junit.assertDocumentIsValidFor"]},{"name":"open override fun resolveParameter(parameterContext: ParameterContext, extensionContext: ExtensionContext): Any","description":"io.github.stefankoppier.openapi.validator.junit.OpenAPIValidationExtension.resolveParameter","location":"integration-junit/io.github.stefankoppier.openapi.validator.junit/-open-a-p-i-validation-extension/resolve-parameter.html","searchKeys":["resolveParameter","open override fun resolveParameter(parameterContext: ParameterContext, extensionContext: ExtensionContext): Any","io.github.stefankoppier.openapi.validator.junit.OpenAPIValidationExtension.resolveParameter"]},{"name":"open override fun supportsParameter(parameterContext: ParameterContext, extensionContext: ExtensionContext): Boolean","description":"io.github.stefankoppier.openapi.validator.junit.OpenAPIValidationExtension.supportsParameter","location":"integration-junit/io.github.stefankoppier.openapi.validator.junit/-open-a-p-i-validation-extension/supports-parameter.html","searchKeys":["supportsParameter","open override fun supportsParameter(parameterContext: ParameterContext, extensionContext: ExtensionContext): Boolean","io.github.stefankoppier.openapi.validator.junit.OpenAPIValidationExtension.supportsParameter"]},{"name":"val relativeUrl: String","description":"io.github.stefankoppier.openapi.validator.junit.OpenAPITest.relativeUrl","location":"integration-junit/io.github.stefankoppier.openapi.validator.junit/-open-a-p-i-test/relative-url.html","searchKeys":["relativeUrl","val relativeUrl: String","io.github.stefankoppier.openapi.validator.junit.OpenAPITest.relativeUrl"]}]